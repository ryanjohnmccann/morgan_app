{"version":3,"sources":["components/calc_finances.js","components/handle_input.js","components/home.js","components/calc_mult_finances.js","components/handle_mult_input.js","components/compare.js","Main.js","index.js","data/zip_codes sync /^/.//.*/.json$","data/property_tax_rates sync /^/.//.*/.json$"],"names":["run_simulation","error_checked_arr","this","purchase_price","down_payment","interest_rate","loan_duration","yearly_payments","city","state","property_type","income","tax_filing_status","monthly_interest","payment_due","yearly_pmi","total_pmi","monthly_pmi","temp_interest","remaining_principle","total_interest","yearly_interest","i","zip_code","temp_data","require","length","des_data","property_tax_rate","monthly_property_tax","yearly_upkeep","closing_costs","pmi_arr","calculate_pmi","interest_arr","calculate_interest","property_tax_arr","calculate_property_tax","maintenance_arr","calculate_maintenance","monthly_principle","principle_payment_arr","monthly_costs","yearly_costs","total_costs","calculate_smart_savings","tot_rec_exp","tot_non_rec_exp","rec_exp_arr","j","k","r","q","res_arr","id","name","monthly","toFixed","yearly","total","temp_arr","new_res_arr","temp_val","split","before_dec","after_dec","count","new_var","reversed_bef_dec","temp_let","new_before_dec","res_var","push","error_check_input","input_list","states_and_cities","Object","values","window","alert","curr_val","isNaN","user_state","check_state","check_city","toLowerCase","replace","keys","user_city","prop_type","valid_props_arr","check_prop","calculate_total_costs","useStyles","makeStyles","theme","root","display","flexWrap","margin","spacing","textField","width","table","container","maxHeight","create_data","create_text_field","key","label","start_adornment","end_adornment","value","error_value","descending_comparator","a","b","orderBy","Home","classes","React","useState","set_values","data","set_data","handle_click","raw_data","response_arr","input","temp_var","des_values_arr","fixed_var","val","parseFloat","handle_input","page","set_page","rows_per_page","set_rows_per_page","order","className","map","TextField","clsx","InputProps","startAdornment","InputAdornment","position","endAdornment","variant","onChange","prop","event","check_var","target","error","style","textAlign","Button","size","color","marginBottom","onClick","TableContainer","component","Paper","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","array","comparator","stabilizedThis","el","index","sort","stable_sort","get_comparator","slice","row","hover","scope","TablePagination","rowsPerPageOptions","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","parseInt","input_arr","loc_purch_error","final_res_arr","sim_a","sim_b","sim_c","initiate_mult_sim","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","text","secondary","float","Compare","expanded","set_expanded","values_a","set_values_a","values_b","set_values_b","values_c","set_values_c","handle_change","panel","isExpanded","data_a","set_data_a","data_b","set_data_b","data_c","set_data_c","page_a","set_page_a","rows_per_page_a","set_rows_per_page_a","page_b","set_page_b","rows_per_page_b","set_rows_per_page_b","page_c","set_page_c","rows_per_page_c","set_rows_per_page_c","raw_data_arr","console","log","handle_mult_input","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","Typography","ExpansionPanelDetails","TabPanel","props","children","other","role","hidden","aria-labelledby","Box","p","a11yProps","LinkTab","Tab","preventDefault","flexGrow","backgroundColor","background","paper","Main","setValue","AppBar","Tabs","newValue","href","ReactDOM","render","StrictMode","document","getElementById","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","code","resolve","module","exports"],"mappings":"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","file":"static/js/main.ed08c53f.chunk.js","sourcesContent":["class run_simulation {\n    constructor(error_checked_arr) {\n        this.purchase_price = error_checked_arr[0]['purchase_price']\n        this.down_payment = error_checked_arr[1]['down_payment']\n        this.interest_rate = error_checked_arr[2]['interest_rate'] / 100\n        this.loan_duration = error_checked_arr[3]['loan_duration']\n        this.yearly_payments = error_checked_arr[4]['yearly_payments']\n        this.city = error_checked_arr[5]['city']\n        this.state = error_checked_arr[6]['state']\n        this.property_type = error_checked_arr[7]['property_type']\n        this.income = error_checked_arr[8]['income']\n        this.tax_filing_status = error_checked_arr[9]['tax_filing_status']\n        this.monthly_interest = this.interest_rate / this.yearly_payments\n        // Equation found online. A monthly payment formula for a home mortgage\n        this.payment_due = (this.purchase_price - this.down_payment) /\n                            (((1 + (this.monthly_interest)) **\n                            (this.yearly_payments * this.loan_duration) - 1) /\n                            (this.monthly_interest * (1 + this.monthly_interest) **\n                            (this.yearly_payments * this.loan_duration)))\n    }\n    // Private Mortgage Insurance\n    calculate_pmi() {\n        if (this.down_payment < (this.purchase_price * 0.2)) {\n            var yearly_pmi = (0.01 * this.purchase_price),\n            total_pmi = yearly_pmi * this.loan_duration,\n            monthly_pmi = yearly_pmi / 12\n        }\n        // No pmi if the down payment is greater or equal to 20 percent\n        else {\n            monthly_pmi = yearly_pmi = total_pmi = 0\n        }\n        return [monthly_pmi, yearly_pmi, total_pmi]\n    }\n    calculate_interest() {\n        var remaining_principle = (this.purchase_price - this.down_payment),\n        total_interest = 0,\n        temp_interest,\n        payment\n        while (true) {\n            temp_interest = ((this.interest_rate / this.yearly_payments) * remaining_principle)\n            total_interest += temp_interest\n            payment = (this.payment_due - temp_interest)\n            remaining_principle -= payment\n            // If remaining principle is less than or equal to the monthly payment,\n            // we know this has to be the last iteration\n            if (remaining_principle <= this.purchase_price / this.loan_duration /\n                this.yearly_payments) {\n                    var yearly_interest = total_interest / this.loan_duration,\n                    monthly_interest = yearly_interest / 12\n                    return [monthly_interest, yearly_interest, total_interest]\n            }\n        }\n    }\n    calculate_property_tax() {\n        var city = this.city\n        // All zip codes in New England start with a zero\n        if (this.city[0] === '0') {   \n            var zip_code = this.city\n            var temp_data = require('../data/zip_codes/' + this.state + '.json'),\n            i\n            for (i = 0; i < temp_data.length; i++) {\n                if (temp_data[i]['zip_code'] === zip_code) {\n                    city = temp_data[i]['city/town']\n                    break\n                }\n            }\n        }\n        var des_data = require('../data/property_tax_rates/' + this.state + '.json')\n        for (i = 0; i < des_data.length; i++) {\n            if (city === des_data[i]['city/town']) {\n                var property_tax_rate = des_data[i]['rate']\n                break\n            }\n        }\n        var monthly_property_tax = ((this.purchase_price / 1000) * property_tax_rate) / 12,\n        yearly_property_tax = monthly_property_tax * 12,\n        total_property_tax = monthly_property_tax * 12 * this.loan_duration\n        return [monthly_property_tax, yearly_property_tax, total_property_tax]\n    }\n    calculate_maintenance() {\n        if (this.property_type === 'house' || this.property_type === 'home') {\n            var yearly_upkeep = this.purchase_price * 0.005\n        }\n        else {\n            yearly_upkeep = 330 * 12\n        }\n        var total_upkeep = yearly_upkeep * this.loan_duration,\n        monthly_upkeep = yearly_upkeep / 12\n        return [monthly_upkeep, yearly_upkeep, total_upkeep]\n    }\n    calculate_smart_savings () {\n        var savings_duration = 30 - this.loan_duration\n        return (savings_duration * (this.payment_due))\n    }\n    calculate_total_costs() {\n        // No recurring expenses\n        var closing_costs = this.purchase_price * 0.04,\n        // Our desired lists\n        pmi_arr = this.calculate_pmi(),\n        interest_arr = this.calculate_interest(),\n        property_tax_arr = this.calculate_property_tax(),\n        maintenance_arr = this.calculate_maintenance(),\n        // The average principle is the difference from the average interest\n        monthly_principle = interest_arr[0] - this.payment_due\n        if (monthly_principle <= 0) {\n            monthly_principle = this.payment_due - interest_arr[0]\n        }\n        var yearly_principle = monthly_principle * 12,\n        principle_payment_arr = [monthly_principle, yearly_principle,\n                                (this.purchase_price - this.down_payment)],\n        monthly_costs = pmi_arr[0] + interest_arr[0] + property_tax_arr[0] +\n                        maintenance_arr[0] + principle_payment_arr[0],\n        yearly_costs = monthly_costs * 12,\n        // Since yearly and monthly costs are averages, they will never\n        //  Add up exactly\n        total_costs = pmi_arr[2] + interest_arr[2] + property_tax_arr[2] +\n                        maintenance_arr[2] + principle_payment_arr[2]\n        if (this.loan_duration < 30) {\n            var smart_savings = this.calculate_smart_savings()\n        }\n        else {\n            smart_savings = 0\n        }\n        // Recommended maximum monthly payment\n        var rec_payment = this.income * (0.25 / 12),\n        // Total recurring and non-recurring expenses\n        tot_rec_exp,\n        tot_non_rec_exp,\n        rec_exp_arr\n\n        tot_rec_exp = principle_payment_arr[2] + pmi_arr[2] + interest_arr[2] + property_tax_arr[2] +\n                        maintenance_arr[2]\n        tot_non_rec_exp = closing_costs\n        rec_exp_arr = [tot_rec_exp/this.loan_duration/12, tot_rec_exp/this.loan_duration, tot_rec_exp]\n\n        var res_arr = [\n            {\n                id: '0',\n                name: 'Principle',\n                monthly: principle_payment_arr[0].toFixed(2),\n                yearly: principle_payment_arr[1].toFixed(2),\n                total: principle_payment_arr[2].toFixed(2),\n            },\n            {\n                id: '1',\n                name: 'Interest',\n                monthly: interest_arr[0].toFixed(2),\n                yearly: interest_arr[1].toFixed(2),\n                total: interest_arr[2].toFixed(2),\n            },\n            {\n                id : '2',\n                name: 'Private Mortgage Insurance',\n                monthly: pmi_arr[0].toFixed(2),\n                yearly: pmi_arr[1].toFixed(2),\n                total: pmi_arr[2].toFixed(2),\n            },\n            {\n                id: '3',\n                name: 'Property Taxes',\n                monthly: property_tax_arr[0].toFixed(2),\n                yearly: property_tax_arr[1].toFixed(2),\n                total: property_tax_arr[2].toFixed(2),\n            },            {\n                id: '4',\n                name: 'Maintenance',\n                monthly: maintenance_arr[0].toFixed(2),\n                yearly: maintenance_arr[1].toFixed(2),\n                total: maintenance_arr[2].toFixed(2),\n            },\n            {\n                id: '5',\n                name: 'Recurring Expenses Total',\n                monthly: rec_exp_arr[0].toFixed(2),\n                yearly: rec_exp_arr[1].toFixed(2),\n                total: rec_exp_arr[2].toFixed(2)\n\n            },\n            {\n                id: '6',\n                name: 'Closing Costs',\n                monthly: \"0.00\",\n                yearly: \"0.00\",\n                total: closing_costs.toFixed(2),\n            },\n            {\n                id: '7',\n                name: 'Non-Recurring Expenses Total',\n                monthly: \"0.00\",\n                yearly: \"0.00\",\n                total: tot_non_rec_exp.toFixed(2)\n            },\n            {\n                id: '8',\n                name: 'Total',\n                monthly: monthly_costs.toFixed(2),\n                yearly: yearly_costs.toFixed(2),\n                total: (total_costs + tot_non_rec_exp).toFixed(2),\n            },\n        ], i, j, k, r, q\n        // Adds commas to final output\n        for (i = 0; i < res_arr.length; i++) {\n            var temp_arr = [res_arr[i]['monthly'], res_arr[i]['yearly'],\n                            res_arr[i]['total']],\n            new_res_arr = []\n            for (j = 0; j < temp_arr.length; j++) {\n                var temp_val = temp_arr[j].split(\".\"),\n                before_dec = temp_val[0], after_dec = temp_val[1],\n                count = 0, new_var = '', reversed_bef_dec = '', temp_rev, var_len\n                var_len = before_dec.length - 1\n                // Reverses string\n                for (r = var_len; r >= 0; r--) {\n                    temp_rev = before_dec[r]\n                    reversed_bef_dec += temp_rev\n                }\n                // Adds commas\n                for (k = 0; k < reversed_bef_dec.length; k++) {\n                    var temp_let = reversed_bef_dec[k]\n                    count += 1\n                    if (count === 3 && (k !== reversed_bef_dec.length - 1)) {\n                        temp_let += ','\n                        count = 0\n                    }\n                    new_var += temp_let\n                }\n                var_len = new_var.length - 1\n                var new_before_dec = '' \n                // Reverses string back to normal with commas\n                for (q = var_len; q >= 0; q-- ) {\n                    temp_rev = new_var[q]\n                    new_before_dec += temp_rev\n                }\n                //  Our final response variable\n                var res_var = new_before_dec + '.' + after_dec\n                new_res_arr.push(res_var)\n            }\n            res_arr[i]['monthly'] = new_res_arr[0]\n            res_arr[i]['yearly'] = new_res_arr[1]\n            res_arr[i]['total'] = new_res_arr[2]\n        }\n        return res_arr\n    }\n}\n\nexport function initiate_sim(input_arr) {\n    var sim_1 = new run_simulation(input_arr),\n    res_data = sim_1.calculate_total_costs()\n    return res_data\n}","import {initiate_sim} from './calc_finances.js'\n\nfunction error_check_input (input_list) {\n    var i, j, k\n    // Loads in all states and cities that exist in thus far\n    var states_and_cities = require('../data/all_states_and_cities.json');\n    for (i = 0; i < input_list.length; i++) {\n        if (Object.values(input_list[1])[0] > Object.values(input_list[0])[0]) {\n            window.alert('Down Payment Cannot Be More Than The Purchase Price')\n            return null\n        }\n        // No NaN or negative numerical values allowed\n        if (i === 0 || i === 1 || i === 2 || i === 3 || i === 4 || i === 8) {\n            var curr_val = Object.values(input_list[i])[0],\n            // So the error can easily be displayed for the user\n            locate_error_arr = [\n                'Purchase Price',\n                'Down Payment',\n                'Interest Rate',\n                'Loan Duration',\n                'Yearly Payments',\n                'City',\n                'State',\n                'Property Type',\n                'Income',\n                'Tax Filing Status'\n            ]  \n            if (curr_val < 0 || isNaN(curr_val)) {\n                window.alert('Invalid Numerical Input At ' + locate_error_arr[i])\n                return null\n            }\n        }\n        // State and city\n        if (i === 6) {\n            var check_state = false, user_state, check_city = false\n            user_state = input_list[6]['state'].toLowerCase()\n            user_state = user_state.replace(' ', '_')\n            if (user_state === 'ma') {\n                user_state = 'massachusetts'\n            }\n            else if (user_state === 'nh') {\n                user_state = 'new_hampshire'\n            }\n            else if (user_state === 'vt') {\n                user_state = 'vermont'\n            }\n            else if (user_state === 'ri') {\n                user_state = 'rhode_island'\n            }\n            else if (user_state === 'me') {\n                user_state = 'maine'\n            }\n            else if (user_state === 'ct') {\n                user_state = 'connecticut'\n            }\n            for (j = 0; j < states_and_cities.length; j++) {\n                var curr_key = Object.keys(states_and_cities[j])\n                if (user_state === curr_key[0]) {\n                    check_state = true\n                    input_list[6]['state'] = user_state\n                    var user_city = input_list[5]['city']\n                    // Means it is a zip code because all zip codes in New England start with a zero\n                    if (user_city[0] === '0') {\n                        var temp_data = require('../data/zip_codes/' + user_state + '.json')\n                        for (i = 0; i < temp_data.length; i++) {\n                            if (temp_data[i]['zip_code'] === user_city) {\n                                input_list[5]['city'] = temp_data[i]['city/town']\n                                check_city = true\n                                break\n                            }\n                        }\n                    }\n                    else {\n                        user_city = user_city.toLowerCase()\n                        user_city = user_city.replace(' ', '_')\n                        for (k = 0; k < states_and_cities[j][user_state].length; k++) {\n                        if (user_city === states_and_cities[j][user_state][k]) {\n                            check_city = true\n                            input_list[5]['city'] = user_city\n                            }\n                        }\n                    }\n                }\n            }\n            if (check_state === false) {\n                window.alert('State Not Found')\n                return null\n            }\n            if (check_city === false) {\n                window.alert('City Not Found')\n                return null\n            }\n        }\n        // Property type\n        else if (i === 7) {\n            var prop_type = input_list[7]['property_type'].toLowerCase(),\n            valid_props_arr = ['house', 'apartment', 'home', 'condo', 'condominium'],\n            check_prop = false\n            prop_type = prop_type.replace(' ', '_')\n            for (j = 0; j < valid_props_arr.length; j++) {\n                if (prop_type === valid_props_arr[j]) {\n                    check_prop = true\n                    input_list[7]['property_type'] = prop_type\n                }\n            }\n            if (check_prop === false) {\n                window.alert('Property Type Invalid')\n                return null\n            }\n        }\n        // Tax filing status, nothing until I get data and update this\n        else if (i === 9) {\n        }\n        else {\n            continue\n        }\n    }\n    // *** Will eventually error check the rest of my input in the future ***\n\n    // Final calculations are ran here\n    return initiate_sim(input_list)\n}\n\nexport function handle_input (input) {\n    var des_values_arr = [], temp_var, fixed_var = '', i\n    for (var val of Object.values(input)) {\n        // Removes commas\n        for (i = 0; i < val['value'].length; i++) {\n            temp_var = val['value'][i]\n            if (temp_var !== ',') {\n                fixed_var += temp_var\n            }\n        }\n        des_values_arr.push(fixed_var)\n        fixed_var = ''\n    }\n    temp_var = ''\n    // Converts string numerical values to floats\n    for (i = 0; i < des_values_arr.length; i++) {\n        if (i === 5 || i === 6 || i === 7 || i === 8 || i === 9) {\n            continue\n        }\n        temp_var = des_values_arr[i]\n        fixed_var = parseFloat(temp_var)\n        des_values_arr[i] = fixed_var\n    }\n    // Our final array to be passed on to be error checked\n    var response_arr = [\n        {purchase_price: des_values_arr[0]},\n        {down_payment: des_values_arr[1]},\n        {interest_rate: des_values_arr[2]},\n        {loan_duration: des_values_arr[3]},\n        {yearly_payments: des_values_arr[4]},\n        {city: des_values_arr[5]},\n        {state: des_values_arr[6]},\n        {property_type: des_values_arr[7]},\n        {income: des_values_arr[8]},\n        {tax_filing_status: des_values_arr[9]}\n    ]\n    // // Made for my convenience of checking my code\n    // var response_arr = [\n    //     {purchase_price: 100000},\n    //     {down_payment: 20000},\n    //     {interest_rate: 15},\n    //     {loan_duration: 12},\n    //     {yearly_payments: 12},\n    //     {city: 'lowell'},\n    //     {state: 'Massachusetts'},\n    //     {property_type: 'house'},\n    //     {income: 100000},\n    //     {tax_filing_status: 'single'}\n    // ]\n    return error_check_input(response_arr)\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Fade from 'react-reveal/Fade'\nimport {handle_input} from './handle_input.js'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(1.5)\n    },\n    textField: {\n      width: 248,\n    },\n    table: {\n      width: '100%',\n    },\n    container: {\n      maxHeight: 440,\n    },\n  }));\n  \n  // Creates default data for the DataTable\n  function create_data(id, name, monthly, yearly, total) {\n    return { id, name, monthly, yearly, total }\n  }\n  \n  // Creates default TextField values\n  function create_text_field(key, label, id, start_adornment, end_adornment, value) {\n    return {key, label, id, start_adornment, end_adornment, value, error_value: false}\n  }\n  \n  // For sorting rows in the DataTable\n  function descending_comparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n      return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n      return 1;\n    }\n    return 0;\n  }\n  \n  // For sorting rows in the DataTable\n  function get_comparator(order, orderBy) {\n    return order === 'desc'\n      ? (a, b) => descending_comparator(a, b, orderBy)\n      : (a, b) => -descending_comparator(a, b, orderBy);\n  }\n  \n  // For sorting rows in the DataTable\n  function stable_sort(array, comparator) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n      const order = comparator(a[0], b[0]);\n      if (order !== 0) return order;\n      return a[1] - b[1];\n    });\n    return stabilizedThis.map((el) => el[0]);\n  }\n\nfunction Home() {\n    const classes = useStyles();\n    // For TextFields\n    const [values, set_values] = React.useState([\n      create_text_field(0, 'Purchase Price', 'purchase_price', '$', '' ,''),\n      create_text_field(1, 'Down Payment', 'down_payment', '$', '' ,''),\n      create_text_field(2, 'Interest Rate', 'interest_rate', '%', '' ,''),\n      create_text_field(3, 'Loan Duration', 'loan_duration', '', 'Years' ,''),\n      create_text_field(4, 'Yearly Payments', 'yearly_payments', '', '' ,''),\n      create_text_field(5, 'City', 'city', '', '' ,''),\n      create_text_field(6, 'State', 'state', '', '' ,''),\n      create_text_field(7, 'Type Of Property', 'type_of_property', '', '' ,''),\n      create_text_field(8, 'Income', 'income', '$', '' ,''),\n      create_text_field(9, 'Tax Filing Status', 'tax_filing_status', '', '' ,''),\n    ]);\n    // For TableRows\n    const [data, set_data] = React.useState([\n      create_data(0, 'Principle', 0, 0, 0),\n      create_data(1, 'Interest', 0, 0, 0),\n      create_data(2, 'Private Mortgage Insurance', 0, 0, 0),\n      create_data(3, 'Property Taxes', 0, 0, 0),\n      create_data(4, 'Maintenance', 0, 0, 0),\n      create_data(5, 'Recurring Expenses Total', 0, 0, 0),\n      create_data(6, 'Closing Costs', 0, 0, 0),\n      create_data(7, 'Non-Recurring Expenses Total', 0, 0, 0),\n      create_data(8, 'Total', 0, 0, 0),\n    ])\n    // Handle change for TextFields\n    const handle_change = prop => event => {\n      var check_var\n      values[prop]['value'] = event.target.value\n      // Make sure our numerical values are not less than zero and they're not strings\n      if (prop === 0 || prop === 1 || prop === 2 || prop === 3 || prop === 4 || prop === 8) {\n        check_var = values[prop]['value']\n        if ((parseFloat(check_var) < 0 || isNaN(parseFloat(check_var))) && check_var !== '') {\n          values[prop]['error_value'] = true\n        }\n        else {\n          values[prop]['error_value'] = false\n        }\n      }\n      set_values([...values])\n    };\n    // For the submit button\n    function handle_click(raw_data) {\n      var response_arr = handle_input(raw_data)\n      if (response_arr !== null) {\n        set_data(response_arr)\n      }\n    }\n    // For TablePagination\n    const [page, set_page] = React.useState(0);\n    const [rows_per_page, set_rows_per_page] = React.useState(6);\n    const handle_change_page = (event, newPage) => {\n      set_page(newPage);\n    };\n    const handle_change_rows_per_page = (event) => {\n      set_rows_per_page(parseInt(event.target.value, 10));\n      set_page(0);\n    };\n    const [order] = React.useState('asc');\n    const [orderBy] = React.useState('id');\n\n    return(\n        <div>\n            {/* Fade in effect */}\n            <Fade>\n            {/* Creates our TextFields */}\n            <div className={classes.root}>\n                {values.map(value => (\n                <TextField\n                    key={value.key}\n                    label={value.label}\n                    id={value.id}\n                    className={clsx(classes.margin, classes.textField)}\n                    InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">{value.start_adornment}</InputAdornment>,\n                    endAdornment: <InputAdornment position=\"start\">{value.end_adornment}</InputAdornment>,\n                    }}\n                    variant=\"outlined\"\n                    value={value.value}\n                    onChange={handle_change(value.key)}\n                    error={value.error_value}\n                />\n                ))}\n            </div>\n          {/* Submit Button */}\n          <div style={{textAlign: 'center'}}>\n            <Button \n                      size=\"large\" variant=\"contained\" color=\"primary\" \n                      style={{marginBottom: '5.2vmin'}}\n                      onClick={() => handle_click(values)}\n              >\n                Submit\n              </Button>\n          </div>\n          {/* DataTable */}\n          <div>\n            <TableContainer component={Paper} className={classes.container}>\n              <Table stickyHeader className={classes.table} aria-label=\"simple table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Expenses</TableCell>\n                    <TableCell align=\"right\">Monthly&nbsp;($)</TableCell>\n                    <TableCell align=\"right\">Yearly&nbsp;($)</TableCell>\n                    <TableCell align=\"right\">Total&nbsp;($)</TableCell>\n                  </TableRow>\n                </TableHead>\n                {/* Creates rows for the DataTable */}\n                <TableBody>\n                {stable_sort(data, get_comparator(order, orderBy))\n                    .slice(page * rows_per_page, page * rows_per_page + rows_per_page)\n                    .map((row) => {\n                      return (\n                        <TableRow key={row.name} hover>\n                        <TableCell component=\"th\" scope=\"row\">\n                          {row.name}\n                        </TableCell>\n                        <TableCell align=\"right\">{row.monthly}</TableCell>\n                        <TableCell align=\"right\">{row.yearly}</TableCell>\n                        <TableCell align=\"right\">{row.total}</TableCell>\n                      </TableRow>\n                      );\n                    })}\n                </TableBody>\n              </Table>\n            </TableContainer>\n            <TablePagination\n              rowsPerPageOptions={[6, 9]}\n              component=\"div\"\n              count={data.length}\n              rowsPerPage={rows_per_page}\n              page={page}\n              onChangePage={handle_change_page}\n              onChangeRowsPerPage={handle_change_rows_per_page}\n            />\n          </div>\n        </Fade>\n      </div>\n    )\n}\n\nexport default Home","class run_simulation {\n    constructor(error_checked_arr) {\n        this.purchase_price = error_checked_arr[0]['purchase_price']\n        this.down_payment = error_checked_arr[1]['down_payment']\n        this.interest_rate = error_checked_arr[2]['interest_rate'] / 100\n        this.loan_duration = error_checked_arr[3]['loan_duration']\n        this.yearly_payments = error_checked_arr[4]['yearly_payments']\n        this.city = error_checked_arr[5]['city']\n        this.state = error_checked_arr[6]['state']\n        this.property_type = error_checked_arr[7]['property_type']\n        this.income = error_checked_arr[8]['income']\n        this.tax_filing_status = error_checked_arr[9]['tax_filing_status']\n        this.monthly_interest = this.interest_rate / this.yearly_payments\n        // Equation found online. A monthly payment formula for a home mortgage\n        this.payment_due = (this.purchase_price - this.down_payment) /\n                            (((1 + (this.monthly_interest)) **\n                            (this.yearly_payments * this.loan_duration) - 1) /\n                            (this.monthly_interest * (1 + this.monthly_interest) **\n                            (this.yearly_payments * this.loan_duration)))\n    }\n    // Private Mortgage Insurance\n    calculate_pmi() {\n        if (this.down_payment < (this.purchase_price * 0.2)) {\n            var yearly_pmi = (0.01 * this.purchase_price),\n            total_pmi = yearly_pmi * this.loan_duration,\n            monthly_pmi = yearly_pmi / 12\n        }\n        // No pmi if the down payment is greater or equal to 20 percent\n        else {\n            monthly_pmi = yearly_pmi = total_pmi = 0\n        }\n        return [monthly_pmi, yearly_pmi, total_pmi]\n    }\n    calculate_interest() {\n        var remaining_principle = (this.purchase_price - this.down_payment),\n        total_interest = 0,\n        temp_interest,\n        payment\n        while (true) {\n            temp_interest = ((this.interest_rate / this.yearly_payments) * remaining_principle)\n            total_interest += temp_interest\n            payment = (this.payment_due - temp_interest)\n            remaining_principle -= payment\n            // If remaining principle is less than or equal to the monthly payment,\n            // we know this has to be the last iteration\n            if (remaining_principle <= this.purchase_price / this.loan_duration /\n                this.yearly_payments) {\n                    var yearly_interest = total_interest / this.loan_duration,\n                    monthly_interest = yearly_interest / 12\n                    return [monthly_interest, yearly_interest, total_interest]\n            }\n        }\n    }\n    calculate_property_tax() {\n        var city = this.city\n        // All zip codes in New England start with a zero\n        if (this.city[0] === '0') {   \n            var zip_code = this.city\n            var temp_data = require('../data/zip_codes/' + this.state + '.json'),\n            i\n            for (i = 0; i < temp_data.length; i++) {\n                if (temp_data[i]['zip_code'] === zip_code) {\n                    city = temp_data[i]['city/town']\n                    break\n                }\n            }\n        }\n        var des_data = require('../data/property_tax_rates/' + this.state + '.json')\n        for (i = 0; i < des_data.length; i++) {\n            if (city === des_data[i]['city/town']) {\n                var property_tax_rate = des_data[i]['rate']\n                break\n            }\n        }\n        var monthly_property_tax = ((this.purchase_price / 1000) * property_tax_rate) / 12,\n        yearly_property_tax = monthly_property_tax * 12,\n        total_property_tax = monthly_property_tax * 12 * this.loan_duration\n        return [monthly_property_tax, yearly_property_tax, total_property_tax]\n    }\n    calculate_maintenance() {\n        if (this.property_type === 'house' || this.property_type === 'home') {\n            var yearly_upkeep = this.purchase_price * 0.005\n        }\n        else {\n            yearly_upkeep = 330 * 12\n        }\n        var total_upkeep = yearly_upkeep * this.loan_duration,\n        monthly_upkeep = yearly_upkeep / 12\n        return [monthly_upkeep, yearly_upkeep, total_upkeep]\n    }\n    calculate_smart_savings () {\n        var savings_duration = 30 - this.loan_duration\n        return (savings_duration * (this.payment_due))\n    }\n    calculate_total_costs() {\n        // No recurring expenses\n        var closing_costs = this.purchase_price * 0.04,\n        // Our desired lists\n        pmi_arr = this.calculate_pmi(),\n        interest_arr = this.calculate_interest(),\n        property_tax_arr = this.calculate_property_tax(),\n        maintenance_arr = this.calculate_maintenance(),\n        // The average principle is the difference from the average interest\n        monthly_principle = interest_arr[0] - this.payment_due\n        if (monthly_principle <= 0) {\n            monthly_principle = this.payment_due - interest_arr[0]\n        }\n        var yearly_principle = monthly_principle * 12,\n        principle_payment_arr = [monthly_principle, yearly_principle,\n                                (this.purchase_price - this.down_payment)],\n        monthly_costs = pmi_arr[0] + interest_arr[0] + property_tax_arr[0] +\n                        maintenance_arr[0] + principle_payment_arr[0],\n        yearly_costs = monthly_costs * 12,\n        // Since yearly and monthly costs are averages, they will never\n        //  Add up exactly\n        total_costs = pmi_arr[2] + interest_arr[2] + property_tax_arr[2] +\n                        maintenance_arr[2] + principle_payment_arr[2]\n        if (this.loan_duration < 30) {\n            var smart_savings = this.calculate_smart_savings()\n        }\n        else {\n            smart_savings = 0\n        }\n        // Recommended maximum monthly payment\n        var rec_payment = this.income * (0.25 / 12),\n        // Total recurring and non-recurring expenses\n        tot_rec_exp,\n        tot_non_rec_exp,\n        rec_exp_arr\n\n        tot_rec_exp = principle_payment_arr[2] + pmi_arr[2] + interest_arr[2] + property_tax_arr[2] +\n                        maintenance_arr[2]\n        tot_non_rec_exp = closing_costs\n        rec_exp_arr = [tot_rec_exp/this.loan_duration/12, tot_rec_exp/this.loan_duration, tot_rec_exp]\n\n        var res_arr = [\n            {\n                id: '0',\n                name: 'Principle',\n                monthly: principle_payment_arr[0].toFixed(2),\n                yearly: principle_payment_arr[1].toFixed(2),\n                total: principle_payment_arr[2].toFixed(2),\n            },\n            {\n                id: '1',\n                name: 'Interest',\n                monthly: interest_arr[0].toFixed(2),\n                yearly: interest_arr[1].toFixed(2),\n                total: interest_arr[2].toFixed(2),\n            },\n            {\n                id : '2',\n                name: 'Private Mortgage Insurance',\n                monthly: pmi_arr[0].toFixed(2),\n                yearly: pmi_arr[1].toFixed(2),\n                total: pmi_arr[2].toFixed(2),\n            },\n            {\n                id: '3',\n                name: 'Property Taxes',\n                monthly: property_tax_arr[0].toFixed(2),\n                yearly: property_tax_arr[1].toFixed(2),\n                total: property_tax_arr[2].toFixed(2),\n            },            {\n                id: '4',\n                name: 'Maintenance',\n                monthly: maintenance_arr[0].toFixed(2),\n                yearly: maintenance_arr[1].toFixed(2),\n                total: maintenance_arr[2].toFixed(2),\n            },\n            {\n                id: '5',\n                name: 'Recurring Expenses Total',\n                monthly: rec_exp_arr[0].toFixed(2),\n                yearly: rec_exp_arr[1].toFixed(2),\n                total: rec_exp_arr[2].toFixed(2)\n\n            },\n            {\n                id: '6',\n                name: 'Closing Costs',\n                monthly: \"0.00\",\n                yearly: \"0.00\",\n                total: closing_costs.toFixed(2),\n            },\n            {\n                id: '7',\n                name: 'Non-Recurring Expenses Total',\n                monthly: \"0.00\",\n                yearly: \"0.00\",\n                total: tot_non_rec_exp.toFixed(2)\n            },\n            {\n                id: '8',\n                name: 'Total',\n                monthly: monthly_costs.toFixed(2),\n                yearly: yearly_costs.toFixed(2),\n                total: (total_costs + tot_non_rec_exp).toFixed(2),\n            },\n        ], i, j, k, r, q\n        // Adds commas to final output\n        for (i = 0; i < res_arr.length; i++) {\n            var temp_arr = [res_arr[i]['monthly'], res_arr[i]['yearly'],\n                            res_arr[i]['total']],\n            new_res_arr = []\n            for (j = 0; j < temp_arr.length; j++) {\n                var temp_val = temp_arr[j].split(\".\"),\n                before_dec = temp_val[0], after_dec = temp_val[1],\n                count = 0, new_var = '', reversed_bef_dec = '', temp_rev, var_len\n                var_len = before_dec.length - 1\n                // Reverses string\n                for (r = var_len; r >= 0; r--) {\n                    temp_rev = before_dec[r]\n                    reversed_bef_dec += temp_rev\n                }\n                // Adds commas\n                for (k = 0; k < reversed_bef_dec.length; k++) {\n                    var temp_let = reversed_bef_dec[k]\n                    count += 1\n                    if (count === 3 && (k !== reversed_bef_dec.length - 1)) {\n                        temp_let += ','\n                        count = 0\n                    }\n                    new_var += temp_let\n                }\n                var_len = new_var.length - 1\n                var new_before_dec = '' \n                // Reverses string back to normal with commas\n                for (q = var_len; q >= 0; q-- ) {\n                    temp_rev = new_var[q]\n                    new_before_dec += temp_rev\n                }\n                //  Our final response variable\n                var res_var = new_before_dec + '.' + after_dec\n                new_res_arr.push(res_var)\n            }\n            res_arr[i]['monthly'] = new_res_arr[0]\n            res_arr[i]['yearly'] = new_res_arr[1]\n            res_arr[i]['total'] = new_res_arr[2]\n        }\n        return res_arr\n    }\n}\n\nexport function initiate_mult_sim(input_arr) {\n    var sim_a = new run_simulation(input_arr[0]),\n    sim_b = new run_simulation(input_arr[1]),\n    sim_c = new run_simulation(input_arr[2])\n\n    var res_data_a = sim_a.calculate_total_costs(),\n    res_data_b = sim_b.calculate_total_costs(),\n    res_data_c = sim_c.calculate_total_costs()\n    \n    return [res_data_a, res_data_b, res_data_c]\n}","import {initiate_mult_sim} from './calc_mult_finances.js'\n\nfunction error_check_input(input_arr) {\n    var i, j, k, r, loc_purch_error, final_res_arr = []\n    // Loads in all states and cities that exist thus far\n    var states_and_cities = require('../data/all_states_and_cities.json');\n    // Access each individual input list from input array\n    for (i = 0; i < input_arr.length; i++) {\n        if (i === 0) {\n            loc_purch_error = 'A'\n        }\n        else if (i === 1) {\n            loc_purch_error = 'B'\n        }\n        else {\n            loc_purch_error = 'C'\n        }\n        for (j = 0; j < input_arr[i].length; j++) {\n            if (Object.values(input_arr[0][1])[0] > Object.values(input_arr[0][0])[0]) {\n                window.alert('Down Payment Cannot Be More Than The Purchase Price In Purchase ' + loc_purch_error)\n                return null\n            }\n            // No NaN or negative numerical values allowed\n            if (j === 0 || j === 1 || j === 2 || j === 3 || j === 4 || j === 8) {\n                var curr_val = Object.values(input_arr[i][j])[0],\n                // So the error can easily be displayed for the user\n                locate_error_arr = [\n                    'Purchase Price',\n                    'Down Payment',\n                    'Interest Rate',\n                    'Loan Duration',\n                    'Yearly Payments',\n                    'City',\n                    'State',\n                    'Property Type',\n                    'Income',\n                    'Tax Filing Status'\n                ]  \n                if (curr_val < 0 || isNaN(curr_val)) {\n                    window.alert('Invalid Numerical Input At ' + locate_error_arr[j] + ' In Purchase ' + loc_purch_error)\n                    return null\n                }\n            }\n            // State and city\n            if (j === 6) {\n                var check_state = false, user_state, check_city = false\n                user_state = input_arr[i][6]['state'].toLowerCase()\n                user_state = user_state.replace(' ', '_')\n                if (user_state === 'ma') {\n                    user_state = 'massachusetts'\n                }\n                else if (user_state === 'nh') {\n                    user_state = 'new_hampshire'\n                }\n                else if (user_state === 'vt') {\n                    user_state = 'vermont'\n                }\n                else if (user_state === 'ri') {\n                    user_state = 'rhode_island'\n                }\n                else if (user_state === 'me') {\n                    user_state = 'maine'\n                }\n                else if (user_state === 'ct') {\n                    user_state = 'connecticut'\n                }\n                for (k = 0; k < states_and_cities.length; k++) {\n                    var curr_key = Object.keys(states_and_cities[k])\n                    if (user_state === curr_key[0]) {\n                        check_state = true\n                        input_arr[i][6]['state'] = user_state\n                        var user_city = input_arr[i][5]['city']\n                        // Means it is a zip code because all zip codes in New England start with a zero\n                        if (user_city[0] === '0') {\n                            var temp_data = require('../data/zip_codes/' + user_state + '.json')\n                            for (r = 0; r < temp_data.length; r++) {\n                                if (temp_data[r]['zip_code'] === user_city) {\n                                    input_arr[5]['city'] = temp_data[r]['city/town']\n                                    check_city = true\n                                    break\n                                }\n                            }\n                        }\n                        else {\n                            user_city = user_city.toLowerCase()\n                            user_city = user_city.replace(' ', '_')\n                            for (r = 0; r < states_and_cities[k][user_state].length; r++) {\n                            if (user_city === states_and_cities[k][user_state][r]) {\n                                check_city = true\n                                input_arr[i][5]['city'] = user_city\n                                }\n                            }\n                        }\n                    }\n                }\n                if (check_state === false) {\n                    window.alert('State Not Found In Purchase ' + loc_purch_error)\n                    return null\n                }\n                if (check_city === false) {\n                    window.alert('City Not Found In Purchase ' + loc_purch_error)\n                    return null\n                }\n            }\n            // Property type\n            else if (j === 7) {\n                var prop_type = input_arr[i][7]['property_type'].toLowerCase(),\n                valid_props_arr = ['house', 'apartment', 'home', 'condo', 'condominium'],\n                check_prop = false\n                prop_type = prop_type.replace(' ', '_')\n                for (k = 0; k < valid_props_arr.length; k++) {\n                    if (prop_type === valid_props_arr[k]) {\n                        check_prop = true\n                        input_arr[i][7]['property_type'] = prop_type\n                    }\n                }\n                if (check_prop === false) {\n                    window.alert('Property Type Invalid In Purchase ' + loc_purch_error)\n                    return null\n                }\n            }\n            // Tax filing status, nothing until I get data and update this\n            else if (i === 9) {\n            }\n            else {\n                continue\n            }\n            // *** Will eventually error check the rest of my input in the future ***\n        }\n        final_res_arr.push(input_arr[i])\n    }\n    return initiate_mult_sim(final_res_arr)\n}\n\nexport function handle_mult_input(input_arr) {\n    var i, j, response_arr = []\n    for (j = 0; j < input_arr.length; j++) {\n        var des_values_arr = [], temp_var, fixed_var = ''\n        for (var val of Object.values(input_arr[j])) {\n            // Removes commas\n            for (i = 0; i < val['value'].length; i++) {\n                temp_var = val['value'][i]\n                if (temp_var !== ',') {\n                    fixed_var += temp_var\n                }\n            }\n            des_values_arr.push(fixed_var)\n            fixed_var = ''\n        }\n        temp_var = ''\n        // Converts string numerical values to floats\n        for (i = 0; i < des_values_arr.length; i++) {\n            if (i === 5 || i === 6 || i === 7 || i === 8 || i === 9) {\n                continue\n            }\n            temp_var = des_values_arr[i]\n            fixed_var = parseFloat(temp_var)\n            des_values_arr[i] = fixed_var\n        }\n        // Our final array to be passed on to be error checked\n        var temp_arr = [\n            {purchase_price: des_values_arr[0]},\n            {down_payment: des_values_arr[1]},\n            {interest_rate: des_values_arr[2]},\n            {loan_duration: des_values_arr[3]},\n            {yearly_payments: des_values_arr[4]},\n            {city: des_values_arr[5]},\n            {state: des_values_arr[6]},\n            {property_type: des_values_arr[7]},\n            {income: des_values_arr[8]},\n            {tax_filing_status: des_values_arr[9]}\n        ]\n        console.log(temp_arr)\n        response_arr.push(temp_arr)\n    }\n\n    // // Made for my convenience of checking my code\n    // var response_arr_a = [\n    //     {purchase_price: 100000},\n    //     {down_payment: 20000},\n    //     {interest_rate: 15},\n    //     {loan_duration: 12},\n    //     {yearly_payments: 12},\n    //     {city: 'lowell'},\n    //     {state: 'Massachusetts'},\n    //     {property_type: 'house'},\n    //     {income: 100000},\n    //     {tax_filing_status: 'single'}\n    // ],\n    // response_arr_b = [\n    //     {purchase_price: 100000},\n    //     {down_payment: 20000},\n    //     {interest_rate: 15},\n    //     {loan_duration: 12},\n    //     {yearly_payments: 12},\n    //     {city: 'tewksbury'},\n    //     {state: 'Massachusetts'},\n    //     {property_type: 'house'},\n    //     {income: 100000},\n    //     {tax_filing_status: 'single'}\n    // ],\n    // response_arr_c = [\n    //     {purchase_price: 100000},\n    //     {down_payment: 20000},\n    //     {interest_rate: 15},\n    //     {loan_duration: 12},\n    //     {yearly_payments: 12},\n    //     {city: 'andover'},\n    //     {state: 'Massachusetts'},\n    //     {property_type: 'house'},\n    //     {income: 100000},\n    //     {tax_filing_status: 'single'}\n    // ]\n    return error_check_input(response_arr)\n}","import React from 'react';\nimport Fade from 'react-reveal/Fade'\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport clsx from 'clsx';\nimport Button from '@material-ui/core/Button';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport {handle_mult_input} from './handle_mult_input.js'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  textField: {\n    width: 230,\n  },\n  margin: {\n    margin: theme.spacing(1.3)\n  },\n  table: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n    width: '33%',\n    float: 'left',\n    marginBottom: '2vmin',\n  },\n}));\n\n// Creates default TextField values\nfunction create_text_field(key, label, id, start_adornment, end_adornment, value) {\n  return {key, label, id, start_adornment, end_adornment, value, error_value: false}\n}\n\n// Creates default data for the DataTable\nfunction create_data(id, name, monthly, yearly, total) {\n  return { id, name, monthly, yearly, total }\n}\n\n// For sorting rows in the DataTable\nfunction descending_comparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction get_comparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descending_comparator(a, b, orderBy)\n    : (a, b) => -descending_comparator(a, b, orderBy);\n}\n\nfunction stable_sort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function Compare() {\n  const classes = useStyles();\n  const [expanded, set_expanded] = React.useState(false);\n  // For TextFields\n  const [values_a, set_values_a] = React.useState([\n    create_text_field(0, 'Purchase Price', 'purchase_price', '$', '' ,''),\n    create_text_field(1, 'Down Payment', 'down_payment', '$', '' ,''),\n    create_text_field(2, 'Interest Rate', 'interest_rate', '%', '' ,''),\n    create_text_field(3, 'Loan Duration', 'loan_duration', '', 'Years' ,''),\n    create_text_field(4, 'Yearly Payments', 'yearly_payments', '', '' ,''),\n    create_text_field(5, 'City', 'city', '', '' ,''),\n    create_text_field(6, 'State', 'state', '', '' ,''),\n    create_text_field(7, 'Type Of Property', 'type_of_property', '', '' ,''),\n    create_text_field(8, 'Income', 'income', '$', '' ,''),\n    create_text_field(9, 'Tax Filing Status', 'tax_filing_status', '', '' ,''),\n  ]);\n  const [values_b, set_values_b] = React.useState([\n    create_text_field(0, 'Purchase Price', 'purchase_price', '$', '' ,''),\n    create_text_field(1, 'Down Payment', 'down_payment', '$', '' ,''),\n    create_text_field(2, 'Interest Rate', 'interest_rate', '%', '' ,''),\n    create_text_field(3, 'Loan Duration', 'loan_duration', '', 'Years' ,''),\n    create_text_field(4, 'Yearly Payments', 'yearly_payments', '', '' ,''),\n    create_text_field(5, 'City', 'city', '', '' ,''),\n    create_text_field(6, 'State', 'state', '', '' ,''),\n    create_text_field(7, 'Type Of Property', 'type_of_property', '', '' ,''),\n    create_text_field(8, 'Income', 'income', '$', '' ,''),\n    create_text_field(9, 'Tax Filing Status', 'tax_filing_status', '', '' ,''),\n  ]);\n  const [values_c, set_values_c] = React.useState([\n    create_text_field(0, 'Purchase Price', 'purchase_price', '$', '' ,''),\n    create_text_field(1, 'Down Payment', 'down_payment', '$', '' ,''),\n    create_text_field(2, 'Interest Rate', 'interest_rate', '%', '' ,''),\n    create_text_field(3, 'Loan Duration', 'loan_duration', '', 'Years' ,''),\n    create_text_field(4, 'Yearly Payments', 'yearly_payments', '', '' ,''),\n    create_text_field(5, 'City', 'city', '', '' ,''),\n    create_text_field(6, 'State', 'state', '', '' ,''),\n    create_text_field(7, 'Type Of Property', 'type_of_property', '', '' ,''),\n    create_text_field(8, 'Income', 'income', '$', '' ,''),\n    create_text_field(9, 'Tax Filing Status', 'tax_filing_status', '', '' ,''),\n  ]);\n  // Handle change for TextFields A, B, and C\n  const handle_change_a = prop => event => {\n    var check_var\n    values_a[prop]['value'] = event.target.value\n    // Make sure our numerical values are not less than zero and they're not strings\n    if (prop === 0 || prop === 1 || prop === 2 || prop === 3 || prop === 4 || prop === 8) {\n      check_var = values_a[prop]['value']\n      if ((parseFloat(check_var) < 0 || isNaN(parseFloat(check_var))) && check_var !== '') {\n        values_a[prop]['error_value'] = true\n      }\n      else {\n        values_a[prop]['error_value'] = false\n      }\n    }\n    set_values_a([...values_a])\n  };\n\n  const handle_change_b = prop => event => {\n    var check_var\n    values_b[prop]['value'] = event.target.value\n    // Make sure our numerical values are not less than zero and they're not strings\n    if (prop === 0 || prop === 1 || prop === 2 || prop === 3 || prop === 4 || prop === 8) {\n      check_var = values_b[prop]['value']\n      if ((parseFloat(check_var) < 0 || isNaN(parseFloat(check_var))) && check_var !== '') {\n        values_b[prop]['error_value'] = true\n      }\n      else {\n        values_b[prop]['error_value'] = false\n      }\n    }\n    set_values_b([...values_b])\n  };\n\n  const handle_change_c = prop => event => {\n    var check_var\n    values_c[prop]['value'] = event.target.value\n    // Make sure our numerical values are not less than zero and they're not strings\n    if (prop === 0 || prop === 1 || prop === 2 || prop === 3 || prop === 4 || prop === 8) {\n      check_var = values_c[prop]['value']\n      if ((parseFloat(check_var) < 0 || isNaN(parseFloat(check_var))) && check_var !== '') {\n        values_c[prop]['error_value'] = true\n      }\n      else {\n        values_c[prop]['error_value'] = false\n      }\n    }\n    set_values_c([...values_c])\n  };\n\n  // For opening and closing each purchases TextFields panel\n  const handle_change = (panel) => (event, isExpanded) => {\n    set_expanded(isExpanded ? panel : false);\n  };\n  // For TableRows\n  const [data_a, set_data_a] = React.useState([\n      create_data(0, 'Principle', 0, 0, 0),\n      create_data(1, 'Interest', 0, 0, 0),\n      create_data(2, 'Private Mortgage Insurance', 0, 0, 0),\n      create_data(3, 'Property Taxes', 0, 0, 0),\n      create_data(4, 'Maintenance', 0, 0, 0),\n      create_data(5, 'Recurring Expenses Total', 0, 0, 0),\n      create_data(6, 'Closing Costs', 0, 0, 0),\n      create_data(7, 'Non-Recurring Expenses Total', 0, 0, 0),\n      create_data(8, 'Total', 0, 0, 0),\n  ]),\n    [data_b, set_data_b] = React.useState([\n    create_data(0, 'Principle', 0, 0, 0),\n    create_data(1, 'Interest', 0, 0, 0),\n    create_data(2, 'Private Mortgage Insurance', 0, 0, 0),\n    create_data(3, 'Property Taxes', 0, 0, 0),\n    create_data(4, 'Maintenance', 0, 0, 0),\n    create_data(5, 'Recurring Expenses Total', 0, 0, 0),\n    create_data(6, 'Closing Costs', 0, 0, 0),\n    create_data(7, 'Non-Recurring Expenses Total', 0, 0, 0),\n    create_data(8, 'Total', 0, 0, 0),\n  ]),\n    [data_c, set_data_c] = React.useState([\n    create_data(0, 'Principle', 0, 0, 0),\n    create_data(1, 'Interest', 0, 0, 0),\n    create_data(2, 'Private Mortgage Insurance', 0, 0, 0),\n    create_data(3, 'Property Taxes', 0, 0, 0),\n    create_data(4, 'Maintenance', 0, 0, 0),\n    create_data(5, 'Recurring Expenses Total', 0, 0, 0),\n    create_data(6, 'Closing Costs', 0, 0, 0),\n    create_data(7, 'Non-Recurring Expenses Total', 0, 0, 0),\n    create_data(8, 'Total', 0, 0, 0),\n  ])\n\n  // For TablePagination\n  const [page_a, set_page_a] = React.useState(0);\n  const [rows_per_page_a, set_rows_per_page_a] = React.useState(6);\n  const [page_b, set_page_b] = React.useState(0);\n  const [rows_per_page_b, set_rows_per_page_b] = React.useState(6);\n  const [page_c, set_page_c] = React.useState(0);\n  const [rows_per_page_c, set_rows_per_page_c] = React.useState(6);\n  const handle_change_page_a = (event, newPage) => {\n      set_page_a(newPage);\n  };\n  const handle_change_rows_per_page_a = (event) => {\n      set_rows_per_page_a(parseInt(event.target.value, 10));\n      set_page_a(0);\n  };\n  const handle_change_page_b = (event, newPage) => {\n    set_page_b(newPage);\n};\nconst handle_change_rows_per_page_b = (event) => {\n    set_rows_per_page_b(parseInt(event.target.value, 10));\n    set_page_b(0);\n};\nconst handle_change_page_c = (event, newPage) => {\n  set_page_c(newPage);\n};\nconst handle_change_rows_per_page_c = (event) => {\n  set_rows_per_page_c(parseInt(event.target.value, 10));\n  set_page_c(0);\n};\n\n  // For the submit button\n  function handle_click(raw_data_arr) {\n    var response_arr = handle_mult_input(raw_data_arr)\n    console.log(response_arr)\n    if (response_arr !== null) {\n      // For the data_tables\n      set_data_a(response_arr[0])\n      set_data_b(response_arr[1])\n      set_data_c(response_arr[2])\n    }\n  }\n\n  const [order] = React.useState('asc');\n  const [orderBy] = React.useState('id');\n\n  return (\n    <div className={classes.root}>\n        <Fade>\n          <div>\n            <ExpansionPanel expanded={expanded === 'panel1'} onChange={handle_change('panel1')} style={{marginBottom: '1vmin'}}>\n              <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel1bh-content\"\n                id=\"panel1bh-header\"\n              >\n                <Typography className={classes.heading}>Purchase A</Typography>\n                <Typography className={classes.secondaryHeading}>\n                </Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <div className={classes.root} id=\"1\">\n                  {values_a.map(value => (\n                      <TextField\n                        key={value.key}\n                        label={value.label}\n                        id={value.id}\n                        className={clsx(classes.margin, classes.textField)}\n                        InputProps={{\n                          startAdornment: <InputAdornment position=\"start\">{value.start_adornment}</InputAdornment>,\n                          endAdornment: <InputAdornment position=\"start\">{value.end_adornment}</InputAdornment>,\n                        }}\n                        variant=\"outlined\"\n                        value={value.value}\n                        onChange={handle_change_a(value.key)}\n                        error={value.error_value}\n                      />\n                  ))}\n                </div>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel expanded={expanded === 'panel2'} onChange={handle_change('panel2')} style={{marginBottom: '1vmin'}}>\n              <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel2bh-content\"\n                id=\"panel2bh-header\"\n              >\n                <Typography className={classes.heading}>Purchase B</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <div className={classes.root} id=\"2\">\n                  {values_b.map(value => (\n                      <TextField\n                        key={value.key}\n                        label={value.label}\n                        id={value.id}\n                        className={clsx(classes.margin, classes.textField)}\n                        InputProps={{\n                          startAdornment: <InputAdornment position=\"start\">{value.start_adornment}</InputAdornment>,\n                          endAdornment: <InputAdornment position=\"start\">{value.end_adornment}</InputAdornment>,\n                        }}\n                        variant=\"outlined\"\n                        value={value.value}\n                        onChange={handle_change_b(value.key)}\n                        error={value.error_value}\n                      />\n                  ))}\n                </div>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n            <ExpansionPanel expanded={expanded === 'panel3'} onChange={handle_change('panel3')} style={{marginBottom: '1vmin'}}>\n              <ExpansionPanelSummary\n                expandIcon={<ExpandMoreIcon />}\n                aria-controls=\"panel3bh-content\"\n                id=\"panel3bh-header\"\n              >\n                <Typography className={classes.heading}>Purchase C</Typography>\n              </ExpansionPanelSummary>\n              <ExpansionPanelDetails>\n                <div className={classes.root} id=\"3\">\n                    {values_c.map(value => (\n                        <TextField\n                          key={value.key}\n                          label={value.label}\n                          id={value.id}\n                          className={clsx(classes.margin, classes.textField)}\n                          InputProps={{\n                            startAdornment: <InputAdornment position=\"start\">{value.start_adornment}</InputAdornment>,\n                            endAdornment: <InputAdornment position=\"start\">{value.end_adornment}</InputAdornment>,\n                          }}\n                          variant=\"outlined\"\n                          value={value.value}\n                          onChange={handle_change_c(value.key)}\n                          error={value.error_value}\n                        />\n                    ))}\n                  </div>\n              </ExpansionPanelDetails>\n            </ExpansionPanel>\n          </div>\n          <div style={{textAlign: 'center'}}>\n          <Button \n                    size=\"large\" variant=\"contained\" color=\"primary\" \n                    style={{marginBottom: '5.2vmin'}}\n                    onClick={() => handle_click([values_a, values_b, values_c])}\n            >\n              Submit All\n            </Button>\n        </div>\n            <div>\n              <TableContainer component={Paper} className={classes.container}>\n                <Table stickyHeader className={classes.table} aria-label=\"simple table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Purchase 'A' Expenses</TableCell>\n                      <TableCell align=\"right\">Monthly&nbsp;($)</TableCell>\n                      <TableCell align=\"right\">Yearly&nbsp;($)</TableCell>\n                      <TableCell align=\"right\">Total&nbsp;($)</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {stable_sort(data_a, get_comparator(order, orderBy))\n                      .slice(page_a * rows_per_page_a, page_a * rows_per_page_a + rows_per_page_a)\n                      .map((row) => {\n                        return (\n                          <TableRow key={row.name} hover>\n                          <TableCell component=\"th\" scope=\"row\">\n                            {row.name}\n                          </TableCell>\n                          <TableCell align=\"right\">{row.monthly}</TableCell>\n                          <TableCell align=\"right\">{row.yearly}</TableCell>\n                          <TableCell align=\"right\">{row.total}</TableCell>\n                        </TableRow>\n                        );\n                      })}\n                  </TableBody>\n                </Table>\n                <TablePagination\n                rowsPerPageOptions={[6, 9]}\n                component=\"div\"\n                count={data_a.length}\n                rowsPerPage={rows_per_page_a}\n                page={page_a}\n                onChangePage={handle_change_page_a}\n                onChangeRowsPerPage={handle_change_rows_per_page_a}\n              />\n              </TableContainer>\n            </div>\n            <div>\n              <TableContainer component={Paper} className={classes.container}>\n                <Table stickyHeader className={classes.table} aria-label=\"simple table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Purchase 'B' Expenses</TableCell>\n                      <TableCell align=\"right\">Monthly&nbsp;($)</TableCell>\n                      <TableCell align=\"right\">Yearly&nbsp;($)</TableCell>\n                      <TableCell align=\"right\">Total&nbsp;($)</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {stable_sort(data_b, get_comparator(order, orderBy))\n                      .slice(page_b * rows_per_page_b, page_b * rows_per_page_b + rows_per_page_b)\n                      .map((row) => {\n                        return (\n                          <TableRow key={row.name} hover>\n                          <TableCell component=\"th\" scope=\"row\">\n                            {row.name}\n                          </TableCell>\n                          <TableCell align=\"right\">{row.monthly}</TableCell>\n                          <TableCell align=\"right\">{row.yearly}</TableCell>\n                          <TableCell align=\"right\">{row.total}</TableCell>\n                        </TableRow>\n                        );\n                      })}\n                  </TableBody>\n                </Table>\n                <TablePagination\n                rowsPerPageOptions={[6, 9]}\n                component=\"div\"\n                count={data_b.length}\n                rowsPerPage={rows_per_page_b}\n                page={page_b}\n                onChangePage={handle_change_page_b}\n                onChangeRowsPerPage={handle_change_rows_per_page_b}\n              />\n              </TableContainer>\n            </div>\n            <div>\n              <TableContainer component={Paper} className={classes.container}>\n                <Table stickyHeader className={classes.table} aria-label=\"simple table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Purchase 'C' Expenses</TableCell>\n                      <TableCell align=\"right\">Monthly&nbsp;($)</TableCell>\n                      <TableCell align=\"right\">Yearly&nbsp;($)</TableCell>\n                      <TableCell align=\"right\">Total&nbsp;($)</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                  {stable_sort(data_c, get_comparator(order, orderBy))\n                      .slice(page_c * rows_per_page_c, page_c * rows_per_page_c + rows_per_page_c)\n                      .map((row) => {\n                        return (\n                          <TableRow key={row.name} hover>\n                          <TableCell component=\"th\" scope=\"row\">\n                            {row.name}\n                          </TableCell>\n                          <TableCell align=\"right\">{row.monthly}</TableCell>\n                          <TableCell align=\"right\">{row.yearly}</TableCell>\n                          <TableCell align=\"right\">{row.total}</TableCell>\n                        </TableRow>\n                        );\n                      })}\n                  </TableBody>\n                </Table>\n                <TablePagination\n                rowsPerPageOptions={[6, 9]}\n                component=\"div\"\n                count={data_c.length}\n                rowsPerPage={rows_per_page_c}\n                page={page_c}\n                onChangePage={handle_change_page_c}\n                onChangeRowsPerPage={handle_change_rows_per_page_c}\n              />\n              </TableContainer>\n            </div>\n        </Fade>\n    </div>\n  );\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Home from './components/home.js';\nimport Compare from './components/compare.js'\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  };\n}\n\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={event => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction Main() {\n\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return(\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs\n          variant=\"fullWidth\"\n          value={value}\n          onChange={handleChange}\n          aria-label=\"nav tabs example\"\n        >\n          <LinkTab label=\"Home\" href=\"/home\" {...a11yProps(0)} />\n          <LinkTab label=\"Compare\" href=\"/compare\" {...a11yProps(1)} />\n          <LinkTab label=\"Morgan\" href=\"/morgan\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n    {/* Home tab */}\n    <TabPanel value={value} index={0}>\n      <Home/>\n    </TabPanel>\n    {/* Compare tab */}\n    <TabPanel value={value} index={1}>\n      <Compare/>\n    </TabPanel>\n    {/* Unused tab (for now) */}\n    <TabPanel value={value} index={2}>\n    </TabPanel>\n  </div>\n  )\n}\n\nexport default Main;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Main from './Main.js';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <Main/>\n  </React.StrictMode>,\n  document.getElementById('root')\n\n);\n","var map = {\n\t\"./connecticut.json\": 106,\n\t\"./maine.json\": 107,\n\t\"./massachusetts.json\": 108,\n\t\"./new_hampshire.json\": 109,\n\t\"./rhode_island.json\": 110,\n\t\"./vermont.json\": 111\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 48;","var map = {\n\t\"./connecticut.json\": 112,\n\t\"./maine.json\": 113,\n\t\"./massachusetts.json\": 114,\n\t\"./new_hampshire.json\": 115,\n\t\"./rhode_island.json\": 116,\n\t\"./vermont.json\": 117\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 74;"],"sourceRoot":""}