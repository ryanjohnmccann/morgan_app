[{"/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/index.js":"1","/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/Main.js":"2","/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/components/home.js":"3","/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/components/compare.js":"4","/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/components/handle_input.js":"5","/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/components/handle_mult_input.js":"6","/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/morty_js/useful_functions.js":"7","/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/components/calc_finances.js":"8","/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/components/calc_mult_finances.js":"9"},{"size":204,"mtime":1608926408565,"results":"10","hashOfConfig":"11"},{"size":2237,"mtime":1610151216407,"results":"12","hashOfConfig":"11"},{"size":16848,"mtime":1611000636536,"results":"13","hashOfConfig":"11"},{"size":14985,"mtime":1611091051018,"results":"14","hashOfConfig":"11"},{"size":6213,"mtime":1609959807938,"results":"15","hashOfConfig":"11"},{"size":8691,"mtime":1608926408542,"results":"16","hashOfConfig":"11"},{"size":636,"mtime":1610149390474,"results":"17","hashOfConfig":"11"},{"size":10356,"mtime":1609180934745,"results":"18","hashOfConfig":"11"},{"size":10781,"mtime":1608926408541,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1p4k9bc",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/index.js",[],["41","42"],"/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/Main.js",[],"/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/components/home.js",[],"/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/components/compare.js",["43"],"import React from 'react';\nimport Fade from 'react-reveal/Fade'\nimport { makeStyles } from '@material-ui/core/styles';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport { ExpansionPanelDetails, ExpansionPanelSummary, InputAdornment, \n          Typography, TextField, Button, Table, TableBody, TableCell, \n          TableContainer, TableHead, TableRow, Paper, TablePagination,\n          Grid, Hidden } from '@material-ui/core'\nimport clsx from 'clsx';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport {handle_mult_input} from './handle_mult_input.js'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(15),\n    flexBasis: '33.33%',\n    flexShrink: 0,\n  },\n  secondaryHeading: {\n    fontSize: theme.typography.pxToRem(15),\n    color: theme.palette.text.secondary,\n  },\n  textField: {\n    width: \"29vmin\",\n  },\n  margin: {\n    margin: theme.spacing(1.3)\n  },\n  table: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n    width: '33%',\n    float: 'left',\n    marginBottom: '2vmin',\n    [theme.breakpoints.down(\"1100\")]: {\n      float: 'none',\n      width: '100%',\n    },\n  },\n}));\n\n// Creates default TextField values\nfunction create_text_field(key, label, id, start_adornment, end_adornment, value) {\n  return {key, label, id, start_adornment, end_adornment, value, error_value: false}\n}\n\n// Creates default data for the DataTable\nfunction create_data(id, name, monthly, yearly, total) {\n  return { id, name, monthly, yearly, total }\n}\n\n// For sorting rows in the DataTable\nfunction descending_comparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction get_comparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descending_comparator(a, b, orderBy)\n    : (a, b) => -descending_comparator(a, b, orderBy);\n}\n\nfunction stable_sort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nexport default function Compare() {\n  const classes = useStyles();\n  const [expanded, set_expanded] = React.useState(false);\n  // For TextFields\n  const [values_a, set_values_a] = React.useState([\n    create_text_field(0, 'Purchase Price', 'purchase_price_a', '$', '' ,''),\n    create_text_field(1, 'Down Payment', 'down_payment_a', '$', '' ,''),\n    create_text_field(2, 'Interest Rate', 'interest_rate_a', '%', '' ,''),\n    create_text_field(3, 'Loan Duration', 'loan_duration_a', '', 'Years' ,''),\n    create_text_field(4, 'Yearly Payments', 'yearly_payments_a', '', '' ,''),\n    create_text_field(5, 'City', 'city_a', '', '' ,''),\n    create_text_field(6, 'State', 'state_a', '', '' ,''),\n    create_text_field(7, 'Type Of Property', 'type_of_property_a', '', '' ,''),\n    create_text_field(8, 'Income', 'income_a', '$', '' ,''),\n    create_text_field(9, 'Tax Filing Status', 'tax_filing_status_a', '', '' ,''),\n  ]);\n  const [values_b, set_values_b] = React.useState([\n    create_text_field(0, 'Purchase Price', 'purchase_price_b', '$', '' ,''),\n    create_text_field(1, 'Down Payment', 'down_payment_b', '$', '' ,''),\n    create_text_field(2, 'Interest Rate', 'interest_rate_b', '%', '' ,''),\n    create_text_field(3, 'Loan Duration', 'loan_duration_b', '', 'Years' ,''),\n    create_text_field(4, 'Yearly Payments', 'yearly_payments_b', '', '' ,''),\n    create_text_field(5, 'City', 'city_b', '', '' ,''),\n    create_text_field(6, 'State', 'state_b', '', '' ,''),\n    create_text_field(7, 'Type Of Property', 'type_of_property_b', '', '' ,''),\n    create_text_field(8, 'Income', 'income_b', '$', '' ,''),\n    create_text_field(9, 'Tax Filing Status', 'tax_filing_status_b', '', '' ,''),\n  ]);\n  // Handle change for TextFields A and B\n  const handle_change_a = prop => event => {\n    var check_var\n    values_a[prop]['value'] = event.target.value\n    // Make sure our numerical values are not less than zero and they're not strings\n    if (prop === 0 || prop === 1 || prop === 2 || prop === 3 || prop === 4 || prop === 8) {\n      check_var = values_a[prop]['value']\n      if ((parseFloat(check_var) < 0 || isNaN(parseFloat(check_var))) && check_var !== '') {\n        values_a[prop]['error_value'] = true\n      }\n      else {\n        values_a[prop]['error_value'] = false\n      }\n    }\n    set_values_a([...values_a])\n  };\n\n  const handle_change_b = prop => event => {\n    var check_var\n    values_b[prop]['value'] = event.target.value\n    // Make sure our numerical values are not less than zero and they're not strings\n    if (prop === 0 || prop === 1 || prop === 2 || prop === 3 || prop === 4 || prop === 8) {\n      check_var = values_b[prop]['value']\n      if ((parseFloat(check_var) < 0 || isNaN(parseFloat(check_var))) && check_var !== '') {\n        values_b[prop]['error_value'] = true\n      }\n      else {\n        values_b[prop]['error_value'] = false\n      }\n    }\n    set_values_b([...values_b])\n  };\n\n  // For opening and closing each purchases TextFields panel\n  const handle_change = (panel) => (event, isExpanded) => {\n    set_expanded(isExpanded ? panel : false);\n  };\n  // For TableRows\n  const [data_a, set_data_a] = React.useState([\n      create_data(0, 'Principle', 0, 0, 0),\n      create_data(1, 'Interest', 0, 0, 0),\n      create_data(2, 'Private Mortgage Insurance', 0, 0, 0),\n      create_data(3, 'Property Taxes', 0, 0, 0),\n      create_data(4, 'Maintenance', 0, 0, 0),\n      create_data(5, 'Recurring Expenses Total', 0, 0, 0),\n      create_data(6, 'Closing Costs', 0, 0, 0),\n      create_data(7, 'Non-Recurring Expenses Total', 0, 0, 0),\n      create_data(8, 'Total', 0, 0, 0),\n  ]),\n    [data_b, set_data_b] = React.useState([\n    create_data(0, 'Principle', 0, 0, 0),\n    create_data(1, 'Interest', 0, 0, 0),\n    create_data(2, 'Private Mortgage Insurance', 0, 0, 0),\n    create_data(3, 'Property Taxes', 0, 0, 0),\n    create_data(4, 'Maintenance', 0, 0, 0),\n    create_data(5, 'Recurring Expenses Total', 0, 0, 0),\n    create_data(6, 'Closing Costs', 0, 0, 0),\n    create_data(7, 'Non-Recurring Expenses Total', 0, 0, 0),\n    create_data(8, 'Total', 0, 0, 0),\n  ])\n\n  // For TablePagination\n  const [page_a, set_page_a] = React.useState(0);\n  const [rows_per_page_a, set_rows_per_page_a] = React.useState(6);\n  const [page_b, set_page_b] = React.useState(0);\n  const [rows_per_page_b, set_rows_per_page_b] = React.useState(6);\n  const handle_change_page_a = (event, newPage) => {\n    set_page_a(newPage);\n};\n  const handle_change_rows_per_page_a = (event) => {\n      set_rows_per_page_a(parseInt(event.target.value, 10));\n      set_page_a(0);\n  };\n  const handle_change_page_b = (event, newPage) => {\n    set_page_b(newPage);\n};\n  const handle_change_rows_per_page_b = (event) => {\n      set_rows_per_page_b(parseInt(event.target.value, 10));\n      set_page_b(0);\n  };\n\n  // For the submit button\n  function handle_click(raw_data_arr) {\n    var response_arr = handle_mult_input(raw_data_arr)\n    if (response_arr !== null) {\n      // For the data_tables\n      set_data_a(response_arr[0])\n      set_data_b(response_arr[1])\n    }\n  }\n\n  const [order] = React.useState('asc');\n  const [orderBy] = React.useState('id');\n\n  return (\n    <div className={classes.root}>\n        <Fade>\n          <div>\n            <Grid container spacing={3}>\n              <Grid item xs={12} sm={6}>\n                <ExpansionPanel expanded={expanded === 'panel1'} onChange={handle_change('panel1')} style={{marginBottom: '1vmin'}}>\n                  <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1bh-content\"\n                    id=\"panel1bh-header\"\n                  >\n                    <Typography className={classes.heading}>Purchase A</Typography>\n                    <Typography className={classes.secondaryHeading}>\n                    </Typography>\n                  </ExpansionPanelSummary>\n                  <ExpansionPanelDetails>\n                    <div className={classes.root} id=\"1\">\n                      {values_a.map(value => (\n                          <TextField\n                            key={value.key}\n                            label={value.label}\n                            id={value.id}\n                            className={clsx(classes.margin, classes.textField)}\n                            InputProps={{\n                              startAdornment: <InputAdornment position=\"start\">{value.start_adornment}</InputAdornment>,\n                              endAdornment: <InputAdornment position=\"start\">{value.end_adornment}</InputAdornment>,\n                            }}\n                            variant=\"outlined\"\n                            value={value.value}\n                            onChange={handle_change_a(value.key)}\n                            error={value.error_value}\n                          />\n                      ))}\n                    </div>\n                  </ExpansionPanelDetails>\n                </ExpansionPanel>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <ExpansionPanel expanded={expanded === 'panel2'} onChange={handle_change('panel2')} style={{marginBottom: '1vmin'}}>\n                  <ExpansionPanelSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel2bh-content\"\n                    id=\"panel2bh-header\"\n                  >\n                    <Typography className={classes.heading}>Purchase B</Typography>\n                  </ExpansionPanelSummary>\n                  <ExpansionPanelDetails>\n                    <div className={classes.root} id=\"2\">\n                      {values_b.map(value => (\n                          <TextField\n                            key={value.key}\n                            label={value.label}\n                            id={value.id}\n                            className={clsx(classes.margin, classes.textField)}\n                            InputProps={{\n                              startAdornment: <InputAdornment position=\"start\">{value.start_adornment}</InputAdornment>,\n                              endAdornment: <InputAdornment position=\"start\">{value.end_adornment}</InputAdornment>,\n                            }}\n                            variant=\"outlined\"\n                            value={value.value}\n                            onChange={handle_change_b(value.key)}\n                            error={value.error_value}\n                          />\n                      ))}\n                    </div>\n                  </ExpansionPanelDetails>\n                </ExpansionPanel>\n              </Grid>\n            </Grid>\n          </div>\n          <div style={{textAlign: 'center'}}>\n          <Button \n                    size=\"large\" variant=\"contained\" color=\"primary\" \n                    style={{marginBottom: '5.2vmin', marginTop: '1.5vmin'}}\n                    onClick={() => handle_click([values_a, values_b])}\n            >\n              Submit All\n            </Button>\n        </div>\n            <div>\n              <TableContainer component={Paper} className={classes.container}>\n                <Table stickyHeader className={classes.table} aria-label=\"simple table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Purchase 'A' Expenses</TableCell>\n                      <TableCell align=\"right\">Monthly&nbsp;($)</TableCell>\n                      <TableCell align=\"right\">Yearly&nbsp;($)</TableCell>\n                      <TableCell align=\"right\">Total&nbsp;($)</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {stable_sort(data_a, get_comparator(order, orderBy))\n                      .slice(page_a * rows_per_page_a, page_a * rows_per_page_a + rows_per_page_a)\n                      .map((row) => {\n                        return (\n                          <TableRow key={row.name} hover>\n                          <TableCell component=\"th\" scope=\"row\">\n                            {row.name}\n                          </TableCell>\n                          <TableCell align=\"right\">{row.monthly}</TableCell>\n                          <TableCell align=\"right\">{row.yearly}</TableCell>\n                          <TableCell align=\"right\">{row.total}</TableCell>\n                        </TableRow>\n                        );\n                      })}\n                  </TableBody>\n                </Table>\n                <TablePagination\n                rowsPerPageOptions={[6, 9]}\n                component=\"div\"\n                count={data_a.length}\n                rowsPerPage={rows_per_page_a}\n                page={page_a}\n                onChangePage={handle_change_page_a}\n                onChangeRowsPerPage={handle_change_rows_per_page_a}\n              />\n              </TableContainer>\n            </div>\n            <div>\n              <TableContainer component={Paper} className={classes.container}>\n                <Table stickyHeader className={classes.table} aria-label=\"simple table\">\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>Purchase 'B' Expenses</TableCell>\n                      <TableCell align=\"right\">Monthly&nbsp;($)</TableCell>\n                      <TableCell align=\"right\">Yearly&nbsp;($)</TableCell>\n                      <TableCell align=\"right\">Total&nbsp;($)</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {stable_sort(data_b, get_comparator(order, orderBy))\n                      .slice(page_b * rows_per_page_b, page_b * rows_per_page_b + rows_per_page_b)\n                      .map((row) => {\n                        return (\n                          <TableRow key={row.name} hover>\n                          <TableCell component=\"th\" scope=\"row\">\n                            {row.name}\n                          </TableCell>\n                          <TableCell align=\"right\">{row.monthly}</TableCell>\n                          <TableCell align=\"right\">{row.yearly}</TableCell>\n                          <TableCell align=\"right\">{row.total}</TableCell>\n                        </TableRow>\n                        );\n                      })}\n                  </TableBody>\n                </Table>\n                <TablePagination\n                rowsPerPageOptions={[6, 9]}\n                component=\"div\"\n                count={data_b.length}\n                rowsPerPage={rows_per_page_b}\n                page={page_b}\n                onChangePage={handle_change_page_b}\n                onChangeRowsPerPage={handle_change_rows_per_page_b}\n              />\n              </TableContainer>\n            </div>\n        </Fade>\n    </div>\n  );\n}","/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/components/handle_input.js",[],"/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/components/handle_mult_input.js",[],"/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/morty_js/useful_functions.js",[],"/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/components/calc_finances.js",[],"/Users/ryanmccann/Desktop/misc/programming/morty_app/vsc_scripts/morty_app_ui/src/components/calc_mult_finances.js",[],["44","45"],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":8,"column":17,"nodeType":"52","messageId":"53","endLine":8,"endColumn":23},{"ruleId":"46","replacedBy":"54"},{"ruleId":"48","replacedBy":"55"},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'Hidden' is defined but never used.","Identifier","unusedVar",["56"],["57"],"no-global-assign","no-unsafe-negation"]